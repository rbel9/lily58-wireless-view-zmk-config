/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        Change_Output: Change_Output {
            compatible = "zmk,behavior-hold-tap";
            label = "CHANGE_OUTPUT";
            bindings = <&out>, <&none>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <42 43>;
            tapping-term-ms = <40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp TAB         &kp N1  &kp N2  &kp N3        &kp N4  &kp N5                               &kp N6         &kp N7  &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp CAPS        &kp Q   &kp W   &kp E         &kp R   &kp T                                &kp Y          &kp U   &kp I      &kp O    &kp P     &kp BACKSLASH
&kp LEFT_SHIFT  &kp A   &kp S   &kp D         &kp F   &kp G                                &kp H          &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z   &kp X   &kp C         &kp V   &kp B         &kp LBKT     &kp RBKT  &kp N          &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                &kp LEFT_WIN  &mo 1   &kp LEFT_ALT  &kp SPACE    &kp RET   &kp RIGHT_ALT  &mo 2   &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Lower";
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans                    &trans     &trans     &trans           &kp MINUS  &kp EQUAL  &trans
&trans      &trans  &trans  &trans  &trans  &trans                    &kp F7     &kp F8     &kp F9           &kp F10    &kp F11    &kp F12
&trans      &trans  &trans  &trans  &trans  &trans                    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR   &kp RPAR   &kp TILDE
&trans      &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &kp MINUS  &kp KP_PLUS      &kp LBRC   &kp RBRC   &kp PIPE
                            &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Raise";
            bindings = <
&kp GRAVE  &trans   &trans   &trans  &trans  &trans                     &trans       &trans     &trans     &trans    &kp DELETE  &kp C_PLAY_PAUSE
&trans     &kp F1   &kp F2   &kp F3  &kp F4  &kp F5                     &trans       &trans     &kp N8     &kp N9    &kp N0      &kp C_VOLUME_UP
&kp F1     &kp F6   &kp F7   &kp F8  &kp F9  &kp F10                    &trans       &kp UP     &kp LEFT   &kp DOWN  &kp RIGHT   &kp C_VOL_DN
&kp F7     &kp F11  &kp F12  &trans  &trans  &trans   &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT    &kp BSLH
                             &trans  &trans  &trans   &trans    &trans  &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&bt BT_CLR                &bt BT_SEL 0              &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&Change_Output OUT_BLE 0  &Change_Output OUT_USB 0  &ext_power EP_ON  &ext_power EP_OFF  &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans                    &trans                    &trans            &trans             &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans                    &trans                    &trans            &trans             &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                                      &trans             &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
